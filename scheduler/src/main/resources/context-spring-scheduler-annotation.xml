<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">
    
    <description>使用Spring自带的定时任务配置--基于Annotation</description>
    
    <!-- 定时任务执行的类，需要被Spring所管理 -->
    <context:component-scan base-package="org.qipeng.scheduler"/>
    
    <!-- 任务调度器的配置 
       pool-size：调度线程池的大小，调度线程在被调度任务完成前不会空闲 (默认为1)-->
   <task:scheduler id="myScheduler" pool-size="5"/>
 
   <!-- 任务执行器的配置 
       pool-size：可以指定执行线程池的初始大小、最大大小,默认值为1-Integer。MAX_VALUE
       queue-capacity：等待执行的任务队列的容量  ，默认值为Integer.MAX_VALUE
       rejection-policy：当等待队列爆了时的策略，分为丢弃、由任务执行器直接运行等方式
       keep-alive:保持连接的秒数
  	-->
   <task:executor id="myExecutor" pool-size="5-10" queue-capacity="20" rejection-policy="ABORT" keep-alive="3600"/>   
 
   <!--
  	        使用annotation来定义任务调度
       mode 使用aop或者aspectj
       proxy-target-class 使用cglib或者使用jdk自带的代理
    -->
   <task:annotation-driven executor="myExecutor"  scheduler="myScheduler" mode="proxy" proxy-target-class="false"/>
	
</beans>